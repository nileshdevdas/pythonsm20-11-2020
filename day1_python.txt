--------------------------------------------------------------------------------
Local Setup :  
1.  Python for windows : 3.8
	install a required version of python 
	PATH:
	Computer Setting -- Environment Variable 
	PATH=c:\xxxxx;d:\sdddx;d:\tools\python;
	If you install a python on you machine and install 
	c:\python38 
	PATH=c:\python38;<otherpath>
2.   IDE : 
	Visual Studio Code 
	PyCharm :- 
	Juypter Notebook 
3.    Browser and Internet access : 
--------------------------------------------------------------------------------
Python is interpreted : 
     SCripted 
     Program 

     Functional Programming 
	Librarary ? 

READ -> EVAL -> PRINT -> LOOP 

REad 
 eval 
   print 
     loop 
------------------------------------------------------------------------------
Does python have a datatype :  Yes but is is mandatory NO 
What is python is dynamically typed language :- 

a = 10 
a = "Nilesh" 
a = []
a = {}
a = def 


.py ---> Pure text 

python ---> REPL 
python ----> .py 

1. Is python strictly typed Language : Is dynamically 
	datatype need not be mentioned 
	int 
2.  Is not a  language that is using any kind termiator or block 
	python is indented language 

	in python everthing is indented
	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx: 
	   yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy: 
              zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz: 
		sdsdsdslkjlskjklsjdfklsjdf
		sdfsdfsadfasdfasdfasdasdfasd
	        asdfasdfasdfasdfasdfdsffdsf
	      asdfasdfasdfasdfasdfasdf
	      asdfasdfasdfasdfasdfasdf
	      asdfasdfasdfasdfasdsdfasdf
	   asdfasdfasdfasdfasdfasdf
	   asdfasdfasdfasdfasdfasdf







-------------------------------------------------------------------------
1.  cmd prompt 
2.  python -V  to check the version of your python 
3.  python 
>>  a = 10 
>>  print(a) 

Data Types in python 
int integeger 
a = 10 
float 
a = 1.1 
str 
a  = 'xsss' 
None 
a = None 
list 
a  = [1, 2,3,4, 5]
set  = {1,2,3,4,5}
dict  = {'x' : 'user' , 'y' : 'password'}
tuple  
a = (1,2,3,4) 




int  = 
float = 
str  =         . raw  / unicode / standrard
None = 
list  =  []
list.append() // mutable + indexed + allow duplicates 

set.add()   // mutable + not indexed + does not allow duplicates 

dict       //  mutable + unique keys + does not allow duplicate key value can be anythoing 

tuple      // a list but imuttable 



----------------------------------------------------------
a) Structured Interpreted dynamically typed language 
b) REPL (Read Eval Print Loop) 
c) Variable and everything is a variable 
d) Runa as standalone ---> .py file (Interactive mode) 
e) Ptyhon 3.x (3.9) 
f) int , float, str, set, list, dict, tuple , None 
g) Built in functions 

--------------------------------------------------------------------------------data types
  int 
  float 
  str 
  bool 
  None 
  list 
  tuple 
  dict 
  set 
 
keywords
  class
  pass
  import  
  False 
  elif
  if 
  while 
  or 
  in 
 and 
 with 
 try 
 except 
 finally 
  break 
 continue 
await 
 else 
raise 
yeild 
 del 

builtins 
  print()
  len()
  sum()
  min()
  max()
  input()
  list()
  set()
  dict()
  float()
  int() 
  ......... 
-------------------------------------------------------------------------------
.net  (nuget) 
nodejs  (npm) 
java/scala  (maven)


Central repository of dependencies : 
I want to connect to a database called :- postgres 
pypi 

pip (Python Package Installer) 
pip install <packageName> 

a developer 1 : X who write a code in python and he uses some 10 libraries in his code :- 
He needs to checkin his code into a central scm (Source Contro Management) GIT ---> 
Does he also check in the libraries with it 000> NO he does not ===> 
He simply checks in only his code 000> 

a Developer2 want to use this code and run the code written by developer 1 : 
how does he come to know   what code and what libraries were used by developer 

the answer is :-   
pip freeze 




Deveoper1 - Write a code and he imports a lot dependencies from pypi 
		pip install xxxx 
		pip install yyyy 
		pip install zzzz 


	puts his code in github ---> 
	Developer --  
	pip freeze > requirements.txt  (10 package)

Developer2  tries to use the code in his machine pulling the code github 
		nothing works 

 



1. PyPi is central hub on the internet where alll the libraries / public available libraries are there 

pip install : you installed 1 library for yourself 

pip freeze  >  requirements.txt 

more requirements.txt 

nilesh.devdas@vinsys.com 

itfm.support@vinsys.com 
siddharth@vinsys.com 
Function --  Function in script format where we can write our own function with out  class 
Method : -- later When we have object programming (Classes ) 


	a  Function is also a variable 
	
	def myfunction():
	    // function body start
	
	
	def myfunction(a, b , c ,d ):
		/// 

	def myfunction(a , b , c=10):
		// deffault should always be on the right and not from 		
		the  left

	def myfunction(a , b , c = 10, d = 20 , e = None , f = 'xyz') 
		// 

	myfunction(1,2)

	1. There is no overloading functionality in term of python is more procedural 
	




1. WHat is a construct of function 
	def  function_name(fn_param , fn_paramn=value): 
		body 
		body 
		body 
	
	def add_numbers(a): (With sing args)
		pass

	def add_numbers(a, b ): (multiple args)
		pass
 
	def add_numbers(a, b = 10 ): (with default values)
		pass

	def add_numbers(a, b , c =10): (with default values)
	  	pass

	def add_numbers(*a):  (args varargs)
		pass

	def add_numbers(**a):  (args kwargs)
		pass
	
	def add_numbers(x, y): functions can return values 
		return x+y 

	function can accept functions a parameters 
	functions can return functions are retunr type 

	every thing is a variable ........................ so   every thing can be passed or returned .......  ?




2. how to invoke a function 
	function_name(9333, 2989383)  // this must follow a sequence
	function_name(fn_paramn=9393, fn_param=3993) // this does not mandate 
							 any sequence 
	    
3.  a function can have a parameter with default value however the default should always be on the right (not on the left) 
	def fn(a, b , c =10 ) : 
		pass 
	and not 
	def fn(a=10, b , c): 
		pass
	the function default value for parameters are always to the right 


4.  function can have variable args 
	varargs is   *args 
	def fn(*args): 
		args == tuple that is passed to you 

	fn(1,2,3,4,5,6,.............) all the params will come to you as tuple 


5,   can functions have kword args (instead of tuple can i get a dictionary ) 

	def fn(**args): 
		print(args) 
	{'param': 3 , param : 3}
	user, 
	passwird 
	url 
			
dbConnect(**kwargs)
		






def function_name(fn_param_1 , fn_param_2 ,  fn_param_n):
    // here starts your function body 


1. a function cannot be overloaded ;; it will get overrwritted 
2. a function can have parameter (n) 
3. a function parameters can have default value --> should be always on the right 
4. a funtion can have vargs   (*args)  = is variable argument-. passed as tuple 
	a(1,3,4,5)
5. a function  can have kwargs (*kwargs) = is varaible argument passed as  dict 
	a(p1=1, p2=3) 
6.  a function can have both vargs as well kwargs   so both variations supported 
	a(*args, **kwargs)
	
	---> a (1,2,3,4, a=10, b=20) 
		a and b will go as dict values and 1,2,3,4 will go as tuple 
7.  a function can accept a function as a  parameter 
8.  a function can return a value  or a function also 
9.  a function can be patched 
10.  a lambda is also a anonymous single line function whcih is callable 


Functions : 
What is exception handling :-  

Flow control :- 

		 block code which you wish to try 
		 block of code that would expect to do some wrong and still allow the program to continue or handle it so that it does abrupt out 

	try:
	    line that you want to try 
	    db = connect_to_db(); 
	    file = readMillionLines();
	    1/0
	    db.close() // what happens to my open connection 
	except: 
	    line that you want handle return ot alternative activyt 
	finally: 
		// whethere is expection 
		// whether there is no exception what so ever in the case 
		// both condition the finally will get called 
		// releaser /// Resoource Releasing block 
	


1. Resource Leak 
2. Connnection Leak 
3, File Handle 
4  Activity in the flow could result in memory leak 







try:
   # the lines of code that you wish to execute goes goes here.... 
except DivideByZeroError as e : 
   # handling of the exception
finally: 
   # whatever it takes whatever it goes with i will be consider as always to 
	 if exception still i am executed 
	 if no exception still execute 


try: 
	try : 
		try:
		     #
		except:
		     #
		finally:
		     # 
	except:
	    #
	finally:
	    #
except:
    # 
finally: 
    #

 









































a.  Data Types 
b. built in function 
	range
	input
	print 
	
c. if elif while for 

e.  .py 

f.  def func_name():
 	pass 

g. for , while , if , 

h. open file --> getting data 

i. dict . set , tuple 

j.  input parameter (input())

k.   pass args  import sys  --> sys.argv 

l.   visual studio code  and usnderstand how write code in vscode with the  run options 

k .  installed and configured pyrealine --> pip install  ----> 

l.   pip freeze and pip install and 















